detach(data_exp2)
#rename agegroups
data_exp2$agegroup %<>%
str_replace("3.0--3.5", "3-3.5 years")%>%
str_replace("3.5--4.0", "3.5-4 years")%>%
str_replace("4.0--4.5", "4-4.5 years")%>%
str_replace("4.5--5.0", "4.5-5 years")
data_exp2 %<>%
rename(Age = agegroup)
# data_exp2 %<>%
#   filter(Subj_ID != "", correct != "NA") %>%
#   mutate(agesplit = cut(age, breaks=c(3, 3.5, 4, 4.5, 5)),
#          agesplit = factor(agesplit,
#                            labels=c("3-3.5 years", "3.5-4 years", "4-4.5 years", "4.5-5 years"))) %>%
#   filter(agesplit != "NA")
#renaming for graphs
data_exp2$type <- factor(data_exp2$type,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
data_exp2$selectionType <- factor(data_exp2$selectionType,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
# data_exp2$trial_type <- factor(data_exp2$trial_tyçpe,
#                                levels = c ("control", "implicature"),
#                                labels = c("Control", "Implicature"))
# data_exp2 %<>%
#   rename(Age = agesplit)
data_exp2 %<>%
mutate(correct = as.integer(correct),
age.c = scale(age, center=TRUE, scale=FALSE))
gl.int <- glmer(correct ~  type * age.c
+ (type | Subj_ID),
data=data, family=binomial,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(gl.int)
data_exp2 %<>%
mutate(correct = as.integer(correct),
age.c = scale(age, center=TRUE, scale=FALSE))
head(data_exp2)
d2 <- read.csv("../data/implicatures_scalarOnly_data.csv")
data_exp2=melt.data.frame(d2,c("Subj_ID","age","agegroup","list"),c("carrots", "hats", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies",
"carrots_selectionType", "hats_selectionType", "cookies_selectionType", "trains_selectionType", "cats_selectionType", "purses_selectionType",  "keys_selectionType", "shirts_selectionType", "breads_selectionType", "horses_selectionType", "bears_selectionType", "frogs_selectionType", "plates_selectionType", "books_selectionType", "elephants_selectionType", "lamps_selectionType", "bananas_selectionType", "butterflies_selectionType",
"carrots_type", "hats_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
data <- data_exp2[1:918,]
data$selectionType <- data_exp2$value[919:1836]
data$type <- data_exp2$value[1837:2754]
names(data)[5] <- "item"
names(data)[6] <- "correct"
data_exp2 <- data
attach(data_exp2)
data_exp2$trial_type[type == "some"] <- "implicature"
data_exp2$trial_type[type != "some"] <- "control"
detach(data_exp2)
#rename agegroups
data_exp2$agegroup %<>%
str_replace("3.0--3.5", "3-3.5 years")%>%
str_replace("3.5--4.0", "3.5-4 years")%>%
str_replace("4.0--4.5", "4-4.5 years")%>%
str_replace("4.5--5.0", "4.5-5 years")
data_exp2 %<>%
rename(Age = agegroup)
# data_exp2 %<>%
#   filter(Subj_ID != "", correct != "NA") %>%
#   mutate(agesplit = cut(age, breaks=c(3, 3.5, 4, 4.5, 5)),
#          agesplit = factor(agesplit,
#                            labels=c("3-3.5 years", "3.5-4 years", "4-4.5 years", "4.5-5 years"))) %>%
#   filter(agesplit != "NA")
#renaming for graphs
data_exp2$type <- factor(data_exp2$type,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
data_exp2$selectionType <- factor(data_exp2$selectionType,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
# data_exp2$trial_type <- factor(data_exp2$trial_tyçpe,
#                                levels = c ("control", "implicature"),
#                                labels = c("Control", "Implicature"))
# data_exp2 %<>%
#   rename(Age = agesplit)
data_exp2 %<>%
mutate(correct = as.integer(correct),
age.c = scale(age, center=TRUE, scale=FALSE))
gl.int <- glmer(correct ~  type * age.c
+ (type | Subj_ID),
data=data, family=binomial,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(gl.int)
gl.int <- glmer(correct ~  type * age.c
+ (type | Subj_ID),
data=data_exp2, family=binomial,
control=glmerControl(optimizer="bobyqa",
optCtrl=list(maxfun=2e5)))
summary(gl.int)
gl.norand <- glmer(correct ~  type * age.c
+ (1 | Subj_ID),
data=data_exp2, family=binomial)
summary(gl.norand)
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","training"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_si <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_si %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
#read in and establish dataframe
d1 <- read.csv("../data/GQ_coding.csv")
d1[,c(8,10,12,14,16,18,20,22, 31, 32, 33, 34)] <- sapply(d1[,c(8,10,12,14,16,18,20,22, 31, 32, 33, 34)],as.character) #for unknown reasons this is necessary for melt.data.frame now
#change to long form
d2=melt.data.frame(d1,c("sub_ID", "test_age","agegroup", "condition", "training"),c("X1_condition", "X2_condition", "X3_condition", "X4_condition", "X5_condition", "X6_condition",  "X7_condition", "X8_condition", "X1_given", "X2_given", "X3_given", "X4_given", "X5_given", "X6_given",  "X7_given", "X8_given", "X1_correct", "X2_correct", "X3_correct", "X4_correct", "X5_correct", "X6_correct",  "X7_correct", "X8_correct"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[6] <- "trial"
names(data)[7] <- "prompt"
names(data)[8] <- "num_given"
names(data)[9] <- "GQ_correct"
#filtering data, creating age breaks
data %<>%
filter(sub_ID != "", num_given != "N/A")%>%
rename(Age = agegroup)
#this is because num_given is a factor - need to change to a number - need to do this for standard error
data$num_given <- as.character(data$num_given)
data$num_given <- as.numeric(data$num_given)
data$GQ_correct <-as.character(data$GQ_correct)
data$GQ_correct <- as.numeric(data$GQ_correct)
#renaming things for prettier graphs
data$prompt %<>%
str_replace("all", "All")%>%
str_replace("most", "Most")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
#creating dataframe for analyses
data_gq <- data %>%
mutate(test = "Give-Quantifier")
#wide-form
d1 <- read.csv("../data/DCCS_coding.csv")
#long form
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup", "condition"),c("pre_1", "pre_2", "pre_3", "pre_4", "pre_5", "pre_6",  "post_1", "post_2", "post_3", "post_4", "post_5", "post_6"))
#filtering data, creating age breaks
data <- d2 %>%
filter(sub_ID != "")
data %<>%
rename(Age = agegroup)
#renaming things
names(data)[5] <- "trial_type"
names(data)[6] <- "DCCS_correct"
#df for further analyses
data_dccs <- data
data_dccs$test <- "DCCS"
#rename trials
tmp1 <- unlist(data$trial_type)%>%
str_replace("pre_1", "pre")%>%
str_replace("pre_2", "pre")%>%
str_replace("pre_3", "pre")%>%
str_replace("pre_4", "pre")%>%
str_replace("pre_5", "pre")%>%
str_replace("pre_6", "pre")%>%
str_replace("post_1", "post")%>%
str_replace("post_2", "post")%>%
str_replace("post_3", "post")%>%
str_replace("post_4", "post")%>%
str_replace("post_5", "post")%>%
str_replace("post_6", "post")
tmp <- as.data.frame(tmp1) %>%
dplyr::rename(switch_type = tmp1)
tmp2 <- bind_cols(data, tmp)
data <- tmp2
#renaming for prettier graphs
data$switch_type %<>%
str_replace("post", "Post-switch")%>%
str_replace("pre", "Pre-switch")
data$switch_type <- as.factor(data$switch_type)
data_dccs <- data
#si df
data_si$SI_correct <- as.character(data_si$SI_correct)
data_si$SI_correct <- as.numeric(data_si$SI_correct)
#scalar implicature task
mss.acc <- data_si %>%
group_by(sub_ID, type)%>%
dplyr::summarise(mean = mean(SI_correct),
test_age = test_age[1],
Age = Age[1])%>%
spread(type, mean)
#dccs
mss.acc2 <- data_dccs %>%
group_by(sub_ID, switch_type)%>%
dplyr::summarise(mean=mean(DCCS_correct))%>%
spread(switch_type, mean)
#now gq
#first mean number
mss.acc3 <- data_gq %>%
group_by(sub_ID, prompt)%>%
dplyr::summarise(mean_num = mean(num_given)) %>%
spread(prompt, mean_num)
#then correct
mss.acc4 <- data_gq %>%
group_by(sub_ID, prompt)%>%
dplyr::summarise(mean_correct = mean(GQ_correct))%>%
spread(prompt, mean_correct)
#overall correct for GQ
mss.acc5 <- data_gq %>%
group_by(sub_ID)%>%
dplyr::summarise(mean_correct = mean(GQ_correct))%>%
dplyr::rename(GQ_overall = mean_correct)
#overall correct for SI
mss.acc6 <- data_si %>%
group_by(sub_ID)%>%
dplyr::summarise(SI_overall = mean(SI_correct))
#bind together
tmp <- right_join(mss.acc, mss.acc2, by = "sub_ID")
tmp1 <- right_join(tmp, mss.acc3, by = "sub_ID")
tmp2 <- right_join(tmp1, mss.acc5, by = "sub_ID")
tmp3 <- right_join(tmp2, mss.acc6, by="sub_ID")
d_all <- right_join(tmp3, mss.acc4, by = "sub_ID") %>%
dplyr::rename(SI_none = None.x,
SI_all = All.x,
SI_implicature = Implicature,
GQ_all = All.y,
GQ_most = Most.x,
GQ_some = Some.x,
GQ_none = None.y,
GQ_all_correct = All,
GQ_most_correct = Most.y,
GQ_some_correct = Some.y,
GQ_none_correct = None,
test_age = test_age)
d_all %<>%
mutate(age.c = scale(age, scale = FALSE, center = TRUE))
head(d_all)
View(data_dccs)
View(data_exp1)
View(data_gq)
View(data_si)
d_all %<>%
mutate(age.c = scale(test_age, scale = FALSE, center = TRUE))
gl.int <- glmer(SI_implicature ~ GQ_some_correct * age.c
+ (1 | Subj_ID),
data=d_all, family=binomial)
summary(gl.int)
gl.int <- glmer(SI_implicature ~ GQ_some_correct * age.c
+ (1 | Subj_ID),
data=d_all, family=binomial)
gl.int <- glmer(SI_implicature ~ GQ_some_correct * age.c
+ (1 | sub_ID),
data=d_all, family=binomial)
setwd("~/Documents/Projects/si_paper/analyses/analysis")
library(knitr)
opts_chunk$set(cache=TRUE, message=FALSE, warning=FALSE, error=TRUE)
rm(list=ls())
library(ggplot2)
library(reshape)
library(plyr)
library(dplyr)
library(stringr)
library(tidyr)
library(markdown)
library(directlabels)
library(magrittr)
library(bootstrap)
library(RCurl)
library(langcog)
library(diptest)
theme_set(theme_bw())
d2 <- read.csv("../data/implicatures_scalarOnly_data.csv")
data_exp2=melt.data.frame(d2,c("Subj_ID","age","agegroup","gender"),c("carrots", "hats", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies",
"carrots_selectionType", "hats_selectionType", "cookies_selectionType", "trains_selectionType", "cats_selectionType", "purses_selectionType",  "keys_selectionType", "shirts_selectionType", "breads_selectionType", "horses_selectionType", "bears_selectionType", "frogs_selectionType", "plates_selectionType", "books_selectionType", "elephants_selectionType", "lamps_selectionType", "bananas_selectionType", "butterflies_selectionType",
"carrots_type", "hats_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
data <- data_exp2[1:918,]
data$selectionType <- data_exp2$value[919:1836]
data$type <- data_exp2$value[1837:2754]
names(data)[5] <- "item"
names(data)[6] <- "correct"
data_exp2 <- data
attach(data_exp2)
data_exp2$trial_type[type == "some"] <- "implicature"
data_exp2$trial_type[type != "some"] <- "control"
detach(data_exp2)
#rename agegroups
data_exp2$agegroup %<>%
str_replace("3.0--3.5", "3-3.5 years")%>%
str_replace("3.5--4.0", "3.5-4 years")%>%
str_replace("4.0--4.5", "4-4.5 years")%>%
str_replace("4.5--5.0", "4.5-5 years")
data_exp2 %<>%
rename(Age = agegroup)
# data_exp2 %<>%
#   filter(Subj_ID != "", correct != "NA") %>%
#   mutate(agesplit = cut(age, breaks=c(3, 3.5, 4, 4.5, 5)),
#          agesplit = factor(agesplit,
#                            labels=c("3-3.5 years", "3.5-4 years", "4-4.5 years", "4.5-5 years"))) %>%
#   filter(agesplit != "NA")
#renaming for graphs
data_exp2$type <- factor(data_exp2$type,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
data_exp2$selectionType <- factor(data_exp2$selectionType,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
# data_exp2$trial_type <- factor(data_exp2$trial_tyçpe,
#                                levels = c ("control", "implicature"),
#                                labels = c("Control", "Implicature"))
# data_exp2 %<>%
#   rename(Age = agesplit)
gender <- data_exp2 %>%
group_by(gender, Age)%>%
distinct(Subj_ID)%>%
summarise(n= n())
d2 <- read.csv("../data/implicatures_scalarOnly_data.csv")
data_exp2=melt.data.frame(d2,c("Subj_ID","age","agegroup","gender", "ethnicity"),c("carrots", "hats", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies",
"carrots_selectionType", "hats_selectionType", "cookies_selectionType", "trains_selectionType", "cats_selectionType", "purses_selectionType",  "keys_selectionType", "shirts_selectionType", "breads_selectionType", "horses_selectionType", "bears_selectionType", "frogs_selectionType", "plates_selectionType", "books_selectionType", "elephants_selectionType", "lamps_selectionType", "bananas_selectionType", "butterflies_selectionType",
"carrots_type", "hats_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
View(data_exp2)
data <- data_exp2[1:918,]
View(data)
View(data)
data <- data_exp2[1:918,]
data$selectionType <- data_exp2$value[919:1836]
View(data)
d2 <- read.csv("../data/implicatures_scalarOnly_data.csv")
data_exp2=melt.data.frame(d2,c("Subj_ID","age","agegroup","gender"),c("carrots", "hats", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies",
"carrots_selectionType", "hats_selectionType", "cookies_selectionType", "trains_selectionType", "cats_selectionType", "purses_selectionType",  "keys_selectionType", "shirts_selectionType", "breads_selectionType", "horses_selectionType", "bears_selectionType", "frogs_selectionType", "plates_selectionType", "books_selectionType", "elephants_selectionType", "lamps_selectionType", "bananas_selectionType", "butterflies_selectionType",
"carrots_type", "hats_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
data <- data_exp2[1:918,]
data$selectionType <- data_exp2$value[919:1836]
data$type <- data_exp2$value[1837:2754]
names(data)[5] <- "item"
names(data)[6] <- "correct"
data_exp2 <- data
attach(data_exp2)
data_exp2$trial_type[type == "some"] <- "implicature"
data_exp2$trial_type[type != "some"] <- "control"
detach(data_exp2)
#rename agegroups
data_exp2$agegroup %<>%
str_replace("3.0--3.5", "3-3.5 years")%>%
str_replace("3.5--4.0", "3.5-4 years")%>%
str_replace("4.0--4.5", "4-4.5 years")%>%
str_replace("4.5--5.0", "4.5-5 years")
data_exp2 %<>%
rename(Age = agegroup)
data_exp2$type <- factor(data_exp2$type,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
data_exp2$selectionType <- factor(data_exp2$selectionType,
levels = c("all","none",
"some"),
labels = c("All","None",
"Some"))
# data_exp2$trial_type <- factor(data_exp2$trial_tyçpe,
#                                levels = c ("control", "implicature"),
#                                labels = c("Control", "Implicature"))
# data_exp2 %<>%
#   rename(Age = agesplit)
gender <- data_exp2 %>%
group_by(gender, Age)%>%
distinct(Subj_ID)%>%
summarise(n= n())
ethnicity <- data_exp2 %>%
group_by(ethnicity, Age)%>%
distinct(Subj_ID)%>%
summarise(n = n())
d4 <- read.csv("../data/implicatures_scalarOnly_data.csv")
View(d4)
ethnicity <- d2 %>%
group_by(ethnicity)%>%
distinct(Subj_ID)%>%
summarise(n = n())
View(ethnicity)
ethnicity <- d2 %>%
group_by(ethnicity)%>%
distinct(Subj_ID)%>%
summarise(n = n())%>%
mutate(cum.n = cum(n),
prop = n/cum.n))
View(ethnicity)
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","gender"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_si <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_si %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
#gender
gender <- data %>%
group_by(gender, Age)%>%
distinct(sub_ID)%>%
summarise(n = n())
ethnicity <- d1 %>%
group_by(ethnicity)%>%
distinct(sub_ID)%>%
summarise(n = n())
View(ethnicity)
