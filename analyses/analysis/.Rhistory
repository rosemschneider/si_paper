# agg.data$total <- agg.data.len$x
# agg.data$prop.corr <- agg.data$correct / agg.data$total
#
# agg.data$q <- 1 - agg.data$prop.corr
# agg.data$err <- sqrt((agg.data$prop.corr * agg.data$q) / agg.data$total)
#
# #save df for later
# agg.exp2 <- agg.data
#graph
quartz()
ggplot(data = agg.2,
aes(x=type, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size=18),
axis.title.y = element_text(size=18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081")) + geom_hline(yintercept = .5, linetype = "dashed")
# mss.acc <- data_exp2 %>%
#   group_by(Subj_ID, type)%>%
#   dplyr::summarise(correct=mean(correct),
#                    Age = Age[1])%>%
#   spread(type, correct)
# #individual differences plot
# ggplot(mss.acc, aes(x=None, y=Some, colour=Age)) +
#   geom_point(stat = "identity", position = position_jitter(.05), shape=16) +
#   geom_smooth(method="lm", col="black", lty=1) +
#   geom_smooth(aes(col=Age, group=Age),
# 				se=FALSE, method="lm",lty=3) +
#   labs(x = "Proportion of SI 'none' trials correct", y = "Proportion of SI 'implicature' trials correct") + scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081"))
##analysis of what kinds of items kids chose when they picked the wrong thing
exp2_wrong <- data_exp2 %>%
filter(correct != 1) %>%
group_by(Age, type, selectionType)%>%
dplyr::summarise(n=n())%>%
mutate(n.total = sum(n), prop = n/n.total)
wrong <- exp2_wrong[c(1:12, 14:20),]
#now graph
quartz()
ggplot(data = wrong,
aes(x=selectionType, y=n, fill=Age)) +
geom_bar(stat="identity", position = position_dodge())  +
ylab("Count of children choosing") +
xlab("Selection Type") + facet_wrap(~type) + theme_bw(base_size=17) +
theme(axis.title.x = element_text(size=18),
axis.title.y = element_text(size=18))+
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081"))
agg.2$trial_type <- factor(agg.2$trial_type, levels=c("All","Some", "None"))
quartz()
ggplot(data = agg.2,
aes(x=type, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size=18),
axis.title.y = element_text(size=18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081")) + geom_hline(yintercept = .5, linetype = "dashed")
head(agg.2)
agg.2$type <- factor(agg.2$type, levels=c("All","Some", "None"))
quartz()
ggplot(data = agg.2,
aes(x=type, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size=18),
axis.title.y = element_text(size=18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081")) + geom_hline(yintercept = .5, linetype = "dashed")
quartz()
ggplot(data = agg.2,
aes(x=type, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size=18),
axis.title.y = element_text(size=18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081"))
#wide-form
d1 <- read.csv("../data/DCCS_coding.csv")
#long form
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup", "condition"),c("pre_1", "pre_2", "pre_3", "pre_4", "pre_5", "pre_6",  "post_1", "post_2", "post_3", "post_4", "post_5", "post_6"))
#filtering data, creating age breaks
data <- d2 %>%
filter(sub_ID != "")
data %<>%
rename(Age = agegroup)
#renaming things
names(data)[5] <- "trial_type"
names(data)[6] <- "DCCS_correct"
#df for further analyses
data_dccs <- data
data_dccs$test <- "DCCS"
#rename trials
tmp1 <- unlist(data$trial_type)%>%
str_replace("pre_1", "pre")%>%
str_replace("pre_2", "pre")%>%
str_replace("pre_3", "pre")%>%
str_replace("pre_4", "pre")%>%
str_replace("pre_5", "pre")%>%
str_replace("pre_6", "pre")%>%
str_replace("post_1", "post")%>%
str_replace("post_2", "post")%>%
str_replace("post_3", "post")%>%
str_replace("post_4", "post")%>%
str_replace("post_5", "post")%>%
str_replace("post_6", "post")
tmp <- as.data.frame(tmp1) %>%
dplyr::rename(switch_type = tmp1)
tmp2 <- bind_cols(data, tmp)
data <- tmp2
#renaming for prettier graphs
data$switch_type %<>%
str_replace("post", "Post-switch")%>%
str_replace("pre", "Pre-switch")
data$switch_type <- as.factor(data$switch_type)
dccs <- data
#read in and establish dataframe
d1 <- read.csv("../data/GQ_coding.csv")
d1[,c(8,10,12,14,16,18,20,22, 31, 32, 33, 34)] <- sapply(d1[,c(8,10,12,14,16,18,20,22, 31, 32, 33, 34)],as.character) #for unknown reasons this is necessary for melt.data.frame now
#change to long form
d2=melt.data.frame(d1,c("sub_ID", "test_age","agegroup", "condition", "training"),c("X1_condition", "X2_condition", "X3_condition", "X4_condition", "X5_condition", "X6_condition",  "X7_condition", "X8_condition", "X1_given", "X2_given", "X3_given", "X4_given", "X5_given", "X6_given",  "X7_given", "X8_given", "X1_correct", "X2_correct", "X3_correct", "X4_correct", "X5_correct", "X6_correct",  "X7_correct", "X8_correct"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[6] <- "trial"
names(data)[7] <- "prompt"
names(data)[8] <- "num_given"
names(data)[9] <- "GQ_correct"
#filtering data, creating age breaks
data %<>%
filter(sub_ID != "", num_given != "N/A")%>%
rename(Age = agegroup)
#this is because num_given is a factor - need to change to a number - need to do this for standard error
data$num_given <- as.character(data$num_given)
data$num_given <- as.numeric(data$num_given)
data$GQ_correct <-as.character(data$GQ_correct)
data$GQ_correct <- as.numeric(data$GQ_correct)
#renaming things for prettier graphs
data$prompt %<>%
str_replace("all", "All")%>%
str_replace("most", "Most")%>%
str_replace("some", "Some")%>%
str_replace("none", "None")
#creating dataframe for analyses
data_gq <- data %>%
mutate(test = "Give-Quantifier")
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","training"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_SIexp3 <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_SIexp3 %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
agge.3$type %>%
str_replace("Implicature", "Some")
agg.3$type %>%
str_replace("Implicature", "Some")
agg.3 <- data_SIexp3 %>%
mutate(correct = as.integer(correct)) %>%
group_by(type, Age)%>%
multi_boot_standard("correct", na.rm=T)
agg.3$type %>%
str_replace("Implicature", "Some")
View(agg.3)
agg.3$type %<>%
str_replace("Implicature", "Some")
quartz()
ggplot(data = agg.3,
aes(x=type, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081"))
agg.3$type <- factor(agg.3$type, levels=c("All", "Some", "None"))
quartz()
ggplot(data = agg.3,
aes(x=type, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081"))
agg.gq <- data_gq %>%
mutate(GQ_correct = as.integer(GQ_correct)) %>%
group_by(prompt, Age)%>%
multi_boot_standard("GQ_correct", na.rm=T)
agg.gq <- data_gq %>%
filter(prompt != "Most") %>%
mutate(GQ_correct = as.integer(GQ_correct)) %>%
group_by(prompt, Age)%>%
multi_boot_standard("GQ_correct", na.rm=T)
agg.gq$prompt <- factor(agg.gq$prompt, levels=c("All","Some", "None"))
quartz()
ggplot(data = agg.gq,
aes(x=prompt, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Quantifier Prompt") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size=18),
axis.title.y = element_text(size=18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081"))
quartz()
ggplot(data = agg.gq,
aes(x=prompt, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Quantifier Prompt") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size=18),
axis.title.y = element_text(size=18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081")) + geom_hline(yintercept = .5, linetype = "dashed")
quartz()
ggplot(data = agg.3,
aes(x=type, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081"))
setwd("~/Documents/si_paper/analyses/analysis")
library(knitr)
opts_chunk$set(cache=TRUE, message=FALSE, warning=FALSE)
rm(list=ls())
library(ggplot2)
library(reshape)
library(plyr)
library(dplyr)
library(stringr)
library(tidyr)
library(markdown)
library(directlabels)
library(magrittr)
library(bootstrap)
library(RCurl)
library(langcog)
library(RColorBrewer)
theme_set(theme_bw())
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","training"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Some")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_SIexp3 <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_SIexp3 %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
#reading in the original wide-form dataframe
d1 <- read.csv("../data/SI_coding.csv")
#fill in the selection types for easier analyses
d1 %<>%
mutate(carrot_selection = factor(carrot_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
hat_selection = factor(hat_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
cookies_selection = factor(cookies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
trains_selection = factor(trains_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
cats_selection = factor(cats_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
purses_selection = factor(purses_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
keys_selection = factor(keys_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
shirts_selection = factor(shirts_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
breads_selection = factor(breads_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
horses_selection = factor(horses_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
bears_selection= factor(bears_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")),
frogs_selection = factor(frogs_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
plates_selection = factor(plates_selection, levels=c(1, 2, 3), labels = c("all", "some", "none")),
books_selection = factor(books_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
elephants_selection = factor(elephants_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
lamps_selection = factor(lamps_selection, levels=c(1, 2, 3), labels = c("none", "all", "some")),
bananas_selection = factor(bananas_selection, levels=c(1, 2, 3), labels = c("some", "all", "none")),
butterflies_selection = factor(butterflies_selection, levels=c(1, 2, 3), labels = c("none", "some", "all")))
d2=melt.data.frame(d1,c("sub_ID","test_age", "agegroup","training"),c("carrot", "hat", "cookies", "trains", "cats", "purses",  "keys", "shirts", "breads", "horses", "bears", "frogs", "plates", "books", "elephants", "lamps", "bananas", "butterflies", "carrot_selection", "hat_selection", "cookies_selection", "trains_selection", "cats_selection", "purses_selection",  "keys_selection", "shirts_selection", "breads_selection", "horses_selection", "bears_selection", "frogs_selection", "plates_selection", "books_selection", "elephants_selection", "lamps_selection", "bananas_selection", "butterflies_selection", "carrot_type", "hat_type", "cookies_type", "trains_type", "cats_type", "purses_type",  "keys_type", "shirts_type", "breads_type", "horses_type", "bears_type", "frogs_type", "plates_type", "books_type", "elephants_type", "lamps_type", "bananas_type", "butterflies_type"))
#making a respectable df
onethird <- (1/3)*nrow(d2)
data <- d2[1:onethird,]
data$selection <- d2$value[(onethird+1):(onethird*2)]
data$type <- d2$value[(2*onethird+1):nrow(d2)]
names(data)[5] <- "item"
names(data)[6] <- "SI_correct"
data$correct <- data$SI_correct==1
#filtering out NAs, adding agesplit
data %<>%
filter(sub_ID != "", correct != "NA")
data %<>%
rename(Age = agegroup)
#renaming for better-looking graphs
data$type %<>%
str_replace("control_all", "All")%>%
str_replace("control_none", "None")%>%
str_replace("implicature", "Implicature")
data$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
#Find the Mean and median ages
age <- data %>%
dplyr::select(sub_ID, test_age, Age) %>%
dplyr::distinct() %>%
group_by(Age)%>%
summarise(n=n(), avg = mean(test_age))
#use this dataframe for stats
data_SIexp3 <- data %>%
mutate(test = "Scalar Implicature")
#age stats
age <- data_SIexp3 %>%
group_by(Age)%>%
summarise(mean = mean(test_age), median = median(test_age), sd = sd(test_age))
# #accuracy by age group in different trials
# agg.data <- aggregate(data_SIexp3$correct, list(data_SIexp3$type, data_SIexp3$Age), FUN=sum)
# agg.data.len <- aggregate(data_SIexp3$correct, list(data_SIexp3$type, data_SIexp3$Age), FUN=length)
# agg.data$x <- agg.data$x
# agg.data.len$x <- agg.data.len$x
#
# names(agg.data) <- c("type", "Age", "correct")
# agg.data$total <- agg.data.len$x
# agg.data$prop.corr <- agg.data$correct / agg.data$total
#
# #prop correct and standard error
# agg.data$q <- 1 - agg.data$prop.corr
# agg.data$err <- sqrt((agg.data$prop.corr * agg.data$q) / agg.data$total)
#
# #save for later
# agg.exp3.si <- agg.data
agg.3 <- data_SIexp3 %>%
mutate(correct = as.integer(correct)) %>%
group_by(type, Age)%>%
multi_boot_standard("correct", na.rm=T)
agg.3$type %<>%
str_replace("Implicature", "Some")
agg.3$type <- factor(agg.3$type, levels=c("All", "Some", "None"))
#plot
quartz()
ggplot(data = agg.3,
aes(x=type, y=mean, fill=Age)) +
geom_bar(stat="identity", position = position_dodge(1)) +
geom_linerange(aes(ymin = ci_lower,
ymax = ci_upper),
size = .8,
show_guide = FALSE,
position=position_dodge(1)) +
ylab("Proportion correct") +
xlab("Trial Type") +
theme_bw(base_size=17) + theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18)) +
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081")) + geom_hline(yintercept = .5, linetype = "dashed")
#What kinds of items are children giving in incorrect trials?
si_wrong <- data_SIexp3 %>%
filter(correct != "TRUE") %>%
group_by(Age, type, selection)%>%
dplyr::summarise(n=n())%>%
mutate(n.total = sum(n), prop = n/n.total)
si_wrong$selection %<>%
str_replace("all", "All")%>%
str_replace("none", "None")%>%
str_replace("some", "Some")
si_wrong$type %<>%
str_replace("Implicature", "Some")
quartz()
ggplot(data = si_wrong,
aes(x=selection, y=n, fill=Age)) +
geom_bar(stat="identity", position = position_dodge())  +
ylab("Count of children choosing") +
xlab("Selection Type") + facet_wrap(~type) + theme_bw(base_size=17) + theme(axis.title.x = element_text(size = 18),
axis.title.y = element_text(size = 18))+
scale_fill_manual(values = c("#4EB3D3", "#2B8CBE", "#0868AC", "#084081"))
